/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author PC
 */
public class Frm_pacientes_adm extends javax.swing.JFrame {
            DefaultTableModel Pacientes;

    /**
     * Creates new form Frm_pacientes
     */
    public Frm_pacientes_adm() {
        initComponents();
            this.Pacientes = (DefaultTableModel) tabla_pacientes.getModel();
                Mostrardatos("");
                                this.setLocationRelativeTo(null);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_nombre1 = new javax.swing.JLabel();
        jPanel_contenido = new javax.swing.JPanel();
        lbl_logo = new javax.swing.JLabel();
        lbl_titulo = new javax.swing.JLabel();
        btn_registrar = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txt_nombre = new javax.swing.JTextField();
        lbl_nombre = new javax.swing.JLabel();
        lbl_apellido = new javax.swing.JLabel();
        txt_apellido = new javax.swing.JTextField();
        lbl_email = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        lbl_telefeno = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        lbl_direccion = new javax.swing.JLabel();
        txt_direccion = new javax.swing.JTextField();
        lbl_fechaNacimiento = new javax.swing.JLabel();
        txt_fechaNacimiento = new javax.swing.JTextField();
        lbl_cedula = new javax.swing.JLabel();
        txt_cedula = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_pacientes = new javax.swing.JTable();
        btn_actualizar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();

        lbl_nombre1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lbl_nombre1.setText("Nombre:");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("REGISTRO DE PACIENTES");
        setResizable(false);

        jPanel_contenido.setBackground(new java.awt.Color(255, 255, 255));

        lbl_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Logo Consultorio Dental Azul Pastel.png"))); // NOI18N

        lbl_titulo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbl_titulo.setText("Control de Pacientes");

        btn_registrar.setBackground(new java.awt.Color(255, 255, 255));
        btn_registrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_registrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/insert.png"))); // NOI18N
        btn_registrar.setText("REGISTRAR");
        btn_registrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registrarActionPerformed(evt);
            }
        });

        btn_limpiar.setBackground(new java.awt.Color(255, 255, 255));
        btn_limpiar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btn_limpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txt_nombre.setFont(new java.awt.Font("Tw Cen MT", 0, 16)); // NOI18N
        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nombreKeyPressed(evt);
            }
        });

        lbl_nombre.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lbl_nombre.setText("Nombre:");

        lbl_apellido.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lbl_apellido.setText("Apellido:");

        txt_apellido.setFont(new java.awt.Font("Tw Cen MT", 0, 16)); // NOI18N

        lbl_email.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lbl_email.setText("Email:");

        txt_email.setFont(new java.awt.Font("Tw Cen MT", 0, 16)); // NOI18N

        lbl_telefeno.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lbl_telefeno.setText("Teléfono:");

        txt_telefono.setFont(new java.awt.Font("Tw Cen MT", 0, 16)); // NOI18N

        lbl_direccion.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lbl_direccion.setText("Dirección:");

        txt_direccion.setFont(new java.awt.Font("Tw Cen MT", 0, 16)); // NOI18N

        lbl_fechaNacimiento.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lbl_fechaNacimiento.setText("Fecha de Nacimiento:");

        txt_fechaNacimiento.setFont(new java.awt.Font("Tw Cen MT", 0, 16)); // NOI18N

        lbl_cedula.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lbl_cedula.setText("Cédula:");

        txt_cedula.setFont(new java.awt.Font("Tw Cen MT", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_fechaNacimiento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_fechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_cedula)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_telefeno)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_telefono))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_apellido)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_apellido))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_nombre)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_nombre))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_direccion)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_direccion))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lbl_email)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nombre)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_apellido)
                    .addComponent(txt_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_cedula)
                    .addComponent(txt_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_email)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_telefeno)
                    .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_direccion)
                    .addComponent(txt_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_fechaNacimiento)
                    .addComponent(txt_fechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tabla_pacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabla_pacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_pacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_pacientes);

        btn_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        btn_actualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/update.png"))); // NOI18N
        btn_actualizar.setText("ACTUALIZAR");
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });

        btn_eliminar.setBackground(new java.awt.Color(255, 255, 255));
        btn_eliminar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete.png"))); // NOI18N
        btn_eliminar.setText("ELIMINAR");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_contenidoLayout = new javax.swing.GroupLayout(jPanel_contenido);
        jPanel_contenido.setLayout(jPanel_contenidoLayout);
        jPanel_contenidoLayout.setHorizontalGroup(
            jPanel_contenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_contenidoLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel_contenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_logo)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel_contenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_contenidoLayout.createSequentialGroup()
                        .addComponent(lbl_titulo)
                        .addGap(199, 199, 199))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_contenidoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
            .addGroup(jPanel_contenidoLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(btn_limpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_registrar)
                .addGap(18, 18, 18)
                .addComponent(btn_actualizar)
                .addGap(18, 18, 18)
                .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138))
        );
        jPanel_contenidoLayout.setVerticalGroup(
            jPanel_contenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_contenidoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel_contenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_contenidoLayout.createSequentialGroup()
                        .addComponent(lbl_logo)
                        .addGap(36, 36, 36)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_contenidoLayout.createSequentialGroup()
                        .addComponent(lbl_titulo)
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel_contenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_contenidoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(btn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel_contenidoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel_contenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_contenido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_contenido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // TODO add your handling code here:

        String id = (String)Pacientes.getValueAt(tabla_pacientes.getSelectedRow(),0);

        PreparedStatement ps;
        String query = "DELETE FROM pacientes WHERE ID_Paciente=?";
        try {
            ps = MyConnection.getConnection().prepareStatement(query);

            ps.setString(1, id);

            if(ps.executeUpdate() > 0)
            {

                JOptionPane.showMessageDialog(null, "Paciente Eliminado");
                Limpiar();
                Mostrardatos("");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Frm_Servicios.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
        }

    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        // TODO add your handling code here:

        String id = (String)Pacientes.getValueAt(tabla_pacientes.getSelectedRow(),0);
        String nom = txt_nombre.getText();
        String apell = txt_apellido.getText();
        String email = txt_email.getText();
        String tel = txt_telefono.getText();
        String dir = txt_direccion.getText();
        String fech = txt_fechaNacimiento.getText();

        PreparedStatement ps;
        String query = "UPDATE pacientes SET Nombre=?, Apellido=?, Email=?, numTel=? ,Direccion=?, FechaDeNacimiento=? WHERE ID_Paciente=?";
        try {
            ps = MyConnection.getConnection().prepareStatement(query);

            ps.setString(7, id);
            ps.setString(1, nom);
            ps.setString(2, apell);
            ps.setString(3, email);
            ps.setString(4, tel);
            ps.setString(5, dir);
            ps.setString(6, fech);

            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, " Paciente Modificado");
            Limpiar();
            Mostrardatos("");

        } catch (SQLException ex) {
            Logger.getLogger(frm_Main.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
        }

    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void tabla_pacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_pacientesMouseClicked
        // TODO add your handling code here:

        try {
            String Nombre = (String) Pacientes.getValueAt(tabla_pacientes.getSelectedRow(),1);
            String Apellido = (String) Pacientes.getValueAt(tabla_pacientes.getSelectedRow(),2);
            String Cedula = (String) Pacientes.getValueAt(tabla_pacientes.getSelectedRow(),3);
            String Email = (String) Pacientes.getValueAt(tabla_pacientes.getSelectedRow(),4);
            String Telefono = (String) Pacientes.getValueAt(tabla_pacientes.getSelectedRow(),5);
            String Direccion = (String) Pacientes.getValueAt(tabla_pacientes.getSelectedRow(),6);
            String fechaNacimiento = (String) Pacientes.getValueAt(tabla_pacientes.getSelectedRow(),7);

            txt_nombre.setText(Nombre);
            txt_apellido.setText(Apellido);
            txt_cedula.setText(Cedula);
            txt_email.setText(Email);
            txt_telefono.setText(Telefono);
            txt_direccion.setText(Direccion);
            txt_fechaNacimiento.setText(fechaNacimiento);

        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, "error "+ex);
        }

    }//GEN-LAST:event_tabla_pacientesMouseClicked

    private void txt_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyPressed
        // TODO add your handling code here:

        try {
            if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                String B = txt_nombre.getText()+"";
                Mostrardatos(B);
            }
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, "error "+ex);
        }

    }//GEN-LAST:event_txt_nombreKeyPressed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        // TODO add your handling code here:

        Limpiar();

    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void btn_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registrarActionPerformed
        // TODO add your handling code here:
        String Nombre = txt_nombre.getText();
        String Apellido = txt_apellido.getText();
        String Cedula = txt_cedula.getText();
        String Email = txt_email.getText();
        String Telefono = txt_telefono.getText();
        String Direccion = txt_direccion.getText();
        String FechaNac = txt_fechaNacimiento.getText();

        if(Nombre.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Agrega el Nombre del Paciente");
        }

        else if(Apellido.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Agrega el Apellido del Paciente");
        }

        else if(Cedula.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Agrega la Cédula del Paciente");
        }

        else if(Telefono.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Agrega el Telefono del Paciente");
        }

        else if(Direccion.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Agrega la Direccion del Paciente");
        }

        else if(FechaNac.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Agrega la Fecha de Nacimiento del Paciente");
        }

        else if(revisarPaciente(Nombre))
        {
            JOptionPane.showMessageDialog(null, "Este Paciente ya existe");
        }
        else{
            PreparedStatement ps;
            String query = "INSERT INTO `pacientes`(`Nombre`,`Apellido`,`Cedula` ,`Email`,`numTel` ,`Direccion`, `FechaDeNacimiento`) VALUES (?,?,?,?,?,?,?)";
            try {
                ps = MyConnection.getConnection().prepareStatement(query);

                ps.setString(1, Nombre);
                ps.setString(2, Apellido);
                ps.setString(3, Cedula);
                ps.setString(4, Email);
                ps.setString(5, Telefono);
                ps.setString(6, Direccion);
                ps.setString(7, FechaNac);

                if(ps.executeUpdate() > 0)
                {
                    JOptionPane.showMessageDialog(null, "Nuevo Paciente Agregado");

                    Limpiar();
                    Mostrardatos("");

                }

            } catch (SQLException ex) {
                Logger.getLogger(Frm_pacientes_adm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "error "+ex);
            }

        }

    }//GEN-LAST:event_btn_registrarActionPerformed

    public void Limpiar(){
        try{
          txt_nombre.setText("");
         txt_apellido.setText("");
         txt_cedula.setText("");
         txt_email.setText("");
         txt_telefono.setText("");
         txt_direccion.setText("");
         txt_fechaNacimiento.setText("");
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "error "+ex);
    }
    }
    
    public void RefrescarTabla(){
        try{
            
            Pacientes.setColumnCount(0);
            Pacientes.setRowCount(0);
            tabla_pacientes.revalidate();
        }
         catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "error "+ex);
        
    }
    }
    
      public boolean revisarPaciente(String pac) {
            PreparedStatement ps;
            ResultSet rs;
            boolean revisar = false;
            String query = "SELECT * FROM `pacientes` WHERE `Cedula` = ?";
            
            try {
                ps = MyConnection.getConnection().prepareStatement(query);
                ps.setString(1, pac);
                
                rs = ps.executeQuery();
                
                if (rs.next())
                {
                    revisar = true;
                }
            } catch (SQLException ex) {
            Logger.getLogger(Frm_empleados.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
        }
        return false;
        }
      
      
       public final void Mostrardatos(String valor){
            //Funcion para llenar la jtable de Usuarios desde la BD
            MyConnection cc=new MyConnection();
            Connection cn=MyConnection.getConnection();
            RefrescarTabla();
            Pacientes.addColumn("ID Paciente");
            Pacientes.addColumn("Nombre");
            Pacientes.addColumn("Apellido");
            Pacientes.addColumn("Cédula");
            Pacientes.addColumn("E-Mail");
            Pacientes.addColumn("Número Teléfono");
            Pacientes.addColumn("Dirección");
            Pacientes.addColumn("Fecha Nacimiento");

                        
   
            this.tabla_pacientes.setModel(Pacientes);
            String sql;
            if (valor.equals(""))
            {
            sql="SELECT * FROM pacientes";
            }
            else{
            sql="SELECT * FROM pacientes WHERE Nombre='"+valor+"'";
            } 
          
            String []datos=new String [8];
            try{
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
            datos[0]=rs.getString(1);
            datos[1]=rs.getString(2);
            datos[2]=rs.getString(3);
            datos[3]=rs.getString(4);
            datos[4]=rs.getString(5);
            datos[5]=rs.getString(6);
            datos[6]=rs.getString(7);
            datos[7]=rs.getString(8);


            Pacientes.addRow(datos);
            }
            tabla_pacientes.setModel(Pacientes);


            }catch(SQLException ex){
            Logger.getLogger(Frm_Servicios.class.getName()).log(Level.SEVERE,null,ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
            }
        }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_pacientes_adm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_pacientes_adm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_pacientes_adm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_pacientes_adm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_pacientes_adm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_registrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_contenido;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_apellido;
    private javax.swing.JLabel lbl_cedula;
    private javax.swing.JLabel lbl_direccion;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_fechaNacimiento;
    private javax.swing.JLabel lbl_logo;
    private javax.swing.JLabel lbl_nombre;
    private javax.swing.JLabel lbl_nombre1;
    private javax.swing.JLabel lbl_telefeno;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JTable tabla_pacientes;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_cedula;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_fechaNacimiento;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
